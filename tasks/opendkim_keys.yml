---
## Loop to generate keys for each domain
- name: creates domain's keys directory
  file: 
    path: "{{ dkim_opendkim_config_dir }}/keys{{ '' if dkim_same_key else '/' ~ dkim_domain }}"
    state: directory

- name: copy signing key
  ansible.builtin.copy:
    src: "{{ dkim_keys[dkim_domain] }}.{{ item }}"
    dest: "{{ dkim_opendkim_config_dir }}/keys{{ '' if dkim_same_key else '/' ~ dkim_domain }}/{{ dkim_selector }}.{{ item }}"
  when: dkim_keys[dkim_domain] is defined
  loop:
    - private
    - txt
  notify:
  - restart opendkim

- name: ensure signing key is present
  stat: 
    path: "{{ dkim_opendkim_config_dir }}/keys{{ '' if dkim_same_key else '/' ~ dkim_domain }}/{{ dkim_selector }}.private"
    get_md5: no
  register: dkim_key
  when: dkim_keys[dkim_domain] is not defined

- name: generate signing key
  command: opendkim-genkey -b {{ dkim_rsa_keylen }} -s {{ dkim_selector }} -d {{ dkim_domain }} -D {{ dkim_opendkim_config_dir }}/keys{{ '' if dkim_same_key else '/' ~ dkim_domain }}
  when: dkim_keys[dkim_domain] is not defined and not dkim_key.stat.exists
  notify:
  - restart opendkim

- name: ensure signing key owner
  file:
    path: "{{ dkim_opendkim_config_dir }}/keys{{ '' if dkim_same_key else '/' ~ dkim_domain }}/{{ dkim_selector }}.private"
    owner: '{{ dkim_user }}'
    group: '{{ dkim_group }}'

...
